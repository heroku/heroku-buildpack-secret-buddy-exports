#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

# fail fast
set -e

unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
# debug
# set -x
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
# fetch HEROKU env var
BUILDPACK_DIR=$(cd "$(dirname "${0:-}")"; cd ..; pwd)

export_env_dir() {
  env_dir=$1
  acceptlist_regex=${2:-''}
  denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      if echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex"; then
        export "$e=$(cat $env_dir/$e)"
        echo "Content of $env_dir/$e:"
        cat "$env_dir/$e"
        if [ "$e" = "SECRETBUDDY_ENV" ]; then
          json_content=$(cat "$env_dir/$e")
          export_json_env_vars "$json_content"
        fi
      fi
    done
  fi
}

export_json_env_vars() {
  json_content=$1
  echo "$json_content" | jq -r '.current | to_entries | .[] | "export \(.key)=\(.value)"' | while read -r export_cmd; do
    eval "$export_cmd"
  done
}

echo "JLD going to export env dir"

export_env_dir "$ENV_DIR"
SECRETBUDDY="$SECRETBUDDY_ENV"
if [ -z "$SECRETBUDDY" ]; then
  echo "No secrets found"
  exit 0
fi

echo "JLD export completed"

BUILDPACK=$BUILDPACK_DIR/secret-buddy-buildpack

# uncomment for debugging
#ls -la $BUILDPACK_DIR
#ls -la $BUILDPACK
mkdir -p "$BUILD_DIR/.profile.d"

cp $BUILDPACK_DIR/profile/secret-buddy.sh $BUILD_DIR/.profile.d/0000-secret-buddy.sh